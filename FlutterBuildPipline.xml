<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1400.v7fd111b_ec82f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2184.v0b_358b_953e69">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>3</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>5</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3894.vd0f0248b_a_fc4">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;GIT PULL&apos;) {
            steps {
                git branch: &quot;main&quot;, url: &apos;https://github.com/OrangeJuice652/YourFirstFlutterApp.git&apos;
            }
        }
        stage(&apos;BUILD&apos;) {
            steps {
                sh &apos;&apos;&apos;
                  #!/bin/bash
                  source ~jenkins/.bash_profile
                  cd $WORKSPACE/flutter_application
                  flutter build apk --debug
                  &apos;&apos;&apos;
            }
        }
        stage(&apos;TESTPARATION&apos;) {
            steps {
                sh &apos;&apos;&apos;
                  #!/bin/bash
                  cd $WORKSPACE/air_test_package
                  zip -r $WORKSPACE/test_bundle.zip tests/ requirements.txt python/ ssl/
                  &apos;&apos;&apos;
            }
        }
        stage(&apos;TEST&apos;) {
            steps {
                devicefarm appArtifact: &apos;*/build/app/outputs/flutter-apk/app-debug.apk&apos;, appiumJavaJUnitTest: &apos;&apos;, appiumJavaTestNGTest: &apos;&apos;, appiumNodeTest: &apos;&apos;, appiumPythonTest: &apos;test_bundle.zip&apos;, appiumRubyTest: &apos;&apos;, appiumVersionJunit: &apos;1.4.16&apos;, appiumVersionPython: &apos;1.4.16&apos;, appiumVersionTestng: &apos;1.4.16&apos;, calabashFeatures: &apos;&apos;, calabashProfile: &apos;&apos;, calabashTags: &apos;&apos;, deviceLatitude: 47.6204, deviceLocation: false, deviceLongitude: -122.3941, devicePoolName: &apos;Top Devices&apos;, environmentToRun: &apos;CustomEnvironment&apos;, eventCount: &apos;&apos;, eventThrottle: &apos;&apos;, extraData: false, extraDataArtifact: &apos;&apos;, ifAppPerformanceMonitoring: true, ifBluetooth: true, ifGPS: true, ifNfc: true, ifSkipAppResigning: false, ifVideoRecording: true, ifVpce: false, ifWebApp: false, ifWifi: true, ignoreRunError: false, isRunUnmetered: false, jobTimeoutMinutes: 60, junitArtifact: &apos;&apos;, junitFilter: &apos;&apos;, password: &apos;&apos;, projectName: &apos;FlutterTest&apos;, radioDetails: false, runName: &apos;${BUILD_TAG}&apos;, seed: &apos;&apos;, storeResults: false, testSpecName: &apos;TestSpecForAirTest.yml&apos;, testToRun: &apos;APPIUM_PYTHON&apos;, uiautomationArtifact: &apos;&apos;, uiautomatorArtifact: &apos;&apos;, uiautomatorFilter: &apos;&apos;, username: &apos;&apos;, vpceServiceName: &apos;&apos;, xctestArtifact: &apos;&apos;, xctestFilter: &apos;&apos;, xctestUiArtifact: &apos;&apos;, xctestUiFilter: &apos;&apos;
            }
        }
    }
    post {
        // Clean after build
        always {
            cleanWs()
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>